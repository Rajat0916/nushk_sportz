{"version":3,"sources":["Nushk_logo.PNG","Homepage/Navbar/Navbar.js","Homepage/Body/Body.js","Homepage/Homepage.js","Blogs/Blogs.js","Events/Events.js","Error/Error.js","News/NewsContent.js","News/News.js","Buy/Buy.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","state","content","id","title","onClickHandler","anchor","document","querySelector","yOffset","window","innerWidth","y","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","props","history","push","className","this","map","data","key","src","Logo","alt","onClick","bind","Component","withRouter","Body","Homepage","Fragment","Blogs","Events","Error","message","NewsContent","error","newsData","articles","urlToImage","description","activePage","url","itemsCountPerPage","totalItemsCount","totalResults","pageRangeDisplayed","onChange","handlePageChange","prevPageText","nextPageText","hideFirstLastPages","News","spinner","componentDidMount","fetch","then","response","json","setState","catch","open","type","color","height","width","Buy","Login","console","log","App","exact","path","component","to","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15897c9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Nushk_logo.9043bfbb.PNG\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Logo from '../../Nushk_logo.PNG';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n    state= {\r\n        content: [\r\n            {\r\n                id:'nushk_sportz',\r\n                title: 'Nushk Sportz'\r\n            },\r\n            {\r\n                id:'about',\r\n                title: 'About'\r\n            },\r\n            {\r\n                id:'blogs',\r\n                title: 'Blogs'\r\n            },\r\n            {\r\n                id:'events',\r\n                title: 'Events'\r\n            },\r\n            {\r\n                id:'news',\r\n                title: 'News'\r\n            },\r\n            {\r\n                id:'buy',\r\n                title: 'Buy'\r\n            },\r\n            {\r\n                id:'login',\r\n                title: 'Login'\r\n            }\r\n        ]\r\n    }\r\n\r\n    onClickHandler= (id)=>{\r\n        if(id==='about'){\r\n            const anchor = document.querySelector('#news_body');\r\n            const yOffset = window.innerWidth > 600 ? -120 : 0;\r\n            const y = anchor.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n            window.scrollTo({ top: y, behavior: 'smooth' });\r\n        }\r\n\r\n        else\r\n            this.props.history.push(`/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='Navbar'>\r\n                {this.state.content.map((data,id)=> {\r\n                    return(\r\n                        data.id==='nushk_sportz' ? <div key={id} className='navbar_card'><img src={Logo} className='logo' id={data.id} alt={data.title} /></div> : <div onClick={this.onClickHandler.bind(this,data.id)} key={id} className='navbar_card' id={data.id}>{data.title}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\r\nimport './Body.css';\r\n\r\nclass Body extends Component {\r\n    render(){\r\n        return(\r\n            <div className='Body'>\r\n                <div className='body_content1'>Nushk Sports</div>\r\n                <div className='body_content1'>About</div>\r\n                <div className='body_content1' id='blogs_body'>Blogs</div>\r\n                <div className='body_content1' id='news_body'>News</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Body from './Body/Body';\r\n\r\nconst Homepage= ()=> {\r\n    return(\r\n        <React.Fragment>\r\n            <Navbar />\r\n            <Body />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from 'react';\r\nimport './Blogs.css';\r\n\r\nclass Blogs extends Component {\r\n    onClickHandler= ()=>{\r\n       this.props.history.push('/'); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Body'>\r\n                <button onClick={this.onClickHandler} className='body_content'>Welcome to blogs</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blogs;","import React, { Component } from 'react';\r\nimport './Events.css';\r\n\r\nclass Events extends Component {\r\n    onClickHandler= ()=>{\r\n        this.props.history.push('/'); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Body'>\r\n                <button onClick={this.onClickHandler} className='body_content'>Welcome to Events</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;","import React from 'react';\r\nimport './Error.css'\r\n\r\nconst Error= (props)=> {\r\n    return(\r\n        <div className='Error'>\r\n            <h3>Sorry for the Inconvinience</h3>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport Logo from '../Nushk_logo.PNG';\r\nimport Pagination from 'react-js-pagination';\r\nimport Error from '../Error/Error';\r\n\r\nconst NewsContent= (props)=> {\r\n    return(\r\n        <div className= 'NewsContent'>\r\n            <div className='nushk_logo'><img onClick={props.onClickHandler.bind(this,'logo')} src={Logo} className='logo' id='logo' alt='Nushk Sportz' /></div>\r\n            \r\n            {props.error !== null ? <Error message={props.error.message}/> :\r\n            <React.Fragment>\r\n                {props.newsData.articles.map((data,id)=>{\r\n                    return(\r\n                        data.urlToImage===null ||data.description==='' || data.title==='' ? null :\r\n                            id >= props.activePage * 10 && id < (props.activePage *10) +10 ?\r\n                            <div key={id} className='NewsCard' onClick={props.onClickHandler.bind(this,data.url)}>\r\n                                <img className='urlToImage' src={data.urlToImage} alt='img'/>\r\n                                <div className='news_content'>\r\n                                    <div className='title'><b>{data.title}</b></div>\r\n                                    <div className='description'>{data.description}</div>\r\n                                </div>\r\n                            </div> \r\n                        :null\r\n                    )\r\n                })}\r\n                \r\n                <div className='Pagination'>\r\n                    <Pagination\r\n                        activePage={props.activePage + 1}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={props.newsData.totalResults}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={props.handlePageChange.bind(this)}\r\n                        prevPageText='Prev'\r\n                        nextPageText='Next'\r\n                        hideFirstLastPages\r\n                    />\r\n                </div>\r\n            </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsContent;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport NewsContent from './NewsContent';\r\nimport './News.css';\r\n\r\nclass News extends Component {\r\n    state= {\r\n        spinner: true\r\n    };\r\n\r\n    componentDidMount= ()=> {\r\n        fetch('http://newsapi.org/v2/top-headlines?country=in&category=sport&sortBy=popularity&pageSize=10&apiKey=89adaba717774839b56d3c03fc426c0a')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({newsData : data, spinner: false, activePage: 0, error: null}))\r\n        .catch(error => this.setState({error : error, spinner: false, newsData: null}))\r\n    }\r\n\r\n    onClickHandler= (id)=> {\r\n        if(id==='logo')\r\n        this.props.history.push('/');\r\n        \r\n        else\r\n        window.open(`${id}?type=individual`);\r\n    }\r\n\r\n    handlePageChange= (id)=> {\r\n        this.setState({spinner:true})\r\n        fetch(`http://newsapi1.org/v2/top-headlines?country=in&category=sport&sortBy=popularity&pageSize=${id*10}&apiKey=89adaba717774839b56d3c03fc426c0a`)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({newsData : data, spinner: false, activePage:(id-1), error: null}))\r\n        .catch(error => this.setState({error : error, spinner: false, newsData: null}))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='News'>\r\n                { this.state.spinner ? <Loader className='Loader' type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> : \r\n                <NewsContent newsData={this.state.newsData} onClickHandler={this.onClickHandler} handlePageChange={this.handlePageChange} activePage={this.state.activePage} error={this.state.error} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import React, { Component } from 'react';\r\nimport './Buy.css';\r\n\r\nclass Buy extends Component {\r\n    onClickHandler= ()=>{\r\n        this.props.history.push('/'); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Body'>\r\n                <button onClick={this.onClickHandler} className='body_content'>Welcome to Buy</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buy;","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    onClickHandler= ()=>{\r\n        console.log('Inside onClickHandlers');\r\n        this.props.history.push('/'); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Body'>\r\n                <button onClick={this.onClickHandler} className='body_content'>Welcome to Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Homepage from './Homepage/Homepage';\r\nimport Blogs from './Blogs/Blogs';\r\nimport Events from './Events/Events';\r\nimport News from './News/News';\r\nimport Buy from './Buy/Buy';\r\nimport Login from './Login/Login';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nconst App= ()=> {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/blogs\" component={Blogs} />\r\n        <Route path=\"/events\" component={Events} />\r\n        <Route path=\"/news\" component={News} />\r\n        <Route path=\"/buy\" component={Buy} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}